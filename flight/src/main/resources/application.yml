api:
  serviceKey: 6ZEBDKwh851n%2FXhobOZiNCAEOHfnBl1kMBGsjhhDy3zubjnTq7h8vG77m6eiCBdXhc1B2FceETLr5zD6kfmHGQ%3D%3D

server:
  port: 8080
  error:
    include-message: always

spring:
  application:
    name: flight
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: flight
#<<< EDA / Topic Name
          destination: travel
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: travel
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: info
    org.springframework.cloud: info

server:
  port: 8086

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: flight
          destination: travel
          contentType: application/json
        event-out:
          destination: travel
          contentType: application/json
          
logging:
  level:
    org.hibernate.type: info
    org.springframework.cloud: info

